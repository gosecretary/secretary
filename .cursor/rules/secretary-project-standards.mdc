---
description: 
globs: 
alwaysApply: true
---
# Secretary Project Engineering Standards

<rule>
name: secretary_project_standards
version: 1.0
priority: critical
description: |
  Enforce best practices for code quality, security, documentation, and test coverage in the Secretary project. Inspired by stdlib and specs best practices from Geoffrey Huntley.

filters:
  - type: file_change
    pattern: "*"
  - type: event
    pattern: "build_success"
  - type: event
    pattern: "file_create"
  - type: event
    pattern: "file_update"

actions:
  - type: require
    message: |
      Whenever you:
      - Add or change a feature, requirement, or rule
      - Add or change an API endpoint
      - Make a significant code change
      You MUST:
      1. Update the following documents to reflect the change:
         - SPECIFICATIONS.md
         - RULES.md
         - README.md
      2. If you add or change an API, update docs/swagger.yaml accordingly.
      3. Write or update tests for all new/changed code. Maintain high test coverage (aim for 80%+).
      4. Ensure all code (except /health and /api/login endpoints) is protected by authentication middleware.
      5. Always apply secure coding practices:
         - Input validation (see internal/validation/validator.go)
         - Use parameterized queries for all DB access
         - Sanitize and encode all outputs
         - Use secure session and cookie handling
         - Follow all rules in SECURITY.md
      6. Write clean, readable, and maintainable code. Follow Go best practices and project conventions.
      7. Run all tests and ensure they pass before merging.
      8. If you break any of these rules, update this rule file to reflect the new learning.

  - type: suggest
    message: |
      - Always keep documentation, rules, and specs in sync with the codebase.
      - Never leave new features undocumented or untested.
      - Use the .cursor/rules directory for all project rules.
      - Reference: https://ghuntley.com/stdlib/ and https://ghuntley.com/specs/

examples:
  - input: "Add a new API endpoint for /api/users/search"
    output: |
      - Update docs/swagger.yaml with the new endpoint.
      - Add tests for the new endpoint.
      - Update README.md, SPECIFICATIONS.md, and RULES.md to document the new feature.
      - Ensure the endpoint is protected by authentication.
  - input: "Refactor session management logic"
    output: |
      - Update SPECIFICATIONS.md and RULES.md if the session logic or rules change.
      - Add/modify tests to cover the new logic.
      - Ensure all session endpoints remain secure and authenticated.
  - input: "Add a new field to the User model"
    output: |
      - Update SPECIFICATIONS.md and README.md to document the new field.
      - Update tests to cover the new field.
      - Update validation logic if needed.

metadata:
  author: Secretary Development Team
  references:
    - https://ghuntley.com/stdlib/
    - https://ghuntley.com/specs/
  status: active
</rule>
